cloud:
  provider: "gce"
  adminUser: "gunjan_bhatia_k8s"
  project:
    name: "digikube003"
      overrideAllowed: "no"  
    region: "us-central1"
    zone: "us-central1-c"
    vpc: "<dynamic>"
  bucket:
    nameSuffix: "bucket"
    name: "<dynamic>"
    class: "STANDARD"
  bastionHost:
    namePrefix: "bastion-host"
    machineType: "f1-micro"
    networkTier: "STANDARD"
    preemptible: "Yes"
    tagIdentifier: "bastion-host"
    tags: "http-server,https-server"
    image: "ubuntu-1804-bionic-v20191211"
    imageProject: "ubuntu-os-cloud"
    bootDiskSize: "10GB"
    bootDiskType: "pd-standard"
    labels: "type=${BASTION_TAG_IDENTIFIER},creator=cloud-init"
gitConfig:
  digikube:
    repository: "https://github.com/samdesh-gcp1/digikube.git"
    user: "samdesh.gcp1@gmail.com"
component:
  kubectl:
    version: "1.15"
    url: "https://storage.googleapis.com/kubernetes-release/release/v1.15.0/bin/linux/amd64/kubectl"
    localPath: "/usr/local/bin/kubectl"
  krew:
    version: "v0.3.3"
    url: "https://github.com/kubernetes-sigs/krew/releases/download/v0.3.3/krew"
    localPath: ""
  kops:
    version: "1.15.0"
    localPath: "/usr/local/bin/kops"
    kopsp:
      url: "https://raw.githubusercontent.com/samdesh-gcp1/digikube/master/bin/v15/kopsp.tar.gz"
      localPath: "/usr/local/bin/kopsp"
    kopsn:
      url: "https://raw.githubusercontent.com/samdesh-gcp1/digikube/master/bin/v15/kopsn.tar.gz"
      localPath: "/usr/local/bin/kopsn"
  helm:
    version: "v3.0.2"
    url: "https://get.helm.sh/helm-v3.0.2-linux-amd64.tar.gz"
    localPath: "/usr/local/bin/helm"  
  digiops:
    version: "0.1"
    url: "cluster/digiops"
    localPath: "/usr/local/bin/digiops"      
cluster:
  kops:
    featureFlags: "AlphaAllowGCE"
    env: "dev1"
    name: "<dynamic>"
      prefix: "c1" 
      suffix: "k8s.local"
    master:
      countMin: 1
      countMax: 1
      zone: "us-central1-c"
      size: "g1-small"
      volumeSize: 10
      image: "cos-cloud/cos-stable-65-10323-99-0"
    node:
      countMin: 2
      countMax: 2
      zone: "us-central1-c"
      size: "g1-small"
      volumeSize: 10
      image: "cos-cloud/cos-stable-65-10323-99-0"
    associatePublicIp: "false"  
    preemptible: "true"
  sysApps:
    ingressController:
      enabled: "true"
      omCommands:
        create: "true"
        update: "false"
        delete: "true"
        validate: "true"
        getRelease: "true"
      deploymentEngine: "helm-chart"
        chartRepoUrl: "https://kubernetes-charts.storage.googleapis.com/"
        chartRepo: "stable/nginx-ingress"
        chartName: "stable/nginx-ingress"
        releaseName: "ingress-controller"
        chartValues: "ingress-controller-config-values.yaml"
        namespace: "sys-apps"
    kubernetesDashboard:
      enabled: "true"
      omCommands:
        create: "true"
        update: "true"
        delete: "true"
      deploymentEngine: "helm-chart"
        chartRepoUrl: "https://kubernetes-charts.storage.googleapis.com/"
        chartRepo: "stable"
        chartName: "kubernetes-dashboard"
        releaseName: "kubernetes-dashboard"
        chartValues: "kubernetes-dashboard-config-values.yaml"
        namespace: "kube-system"
  platformApps:
    polyaxon:
      enabled: "true"
      omCommands:
        create: "true"
        update: "true"
        delete: "true"
        validate: "true"
      deploymentEngine: "helm-chart"
        chartRepoUrl: "https://charts.polyaxon.com"
        chartRepo: "polyaxon"
        chartName: "polyaxon/polyaxon"
        releaseName: "polyaxon"
        chartValues: "polyaxon-config-values.yaml"
        namespace: "polyaxon"
    mongoDBOperator:
      enabled: "true"
      omCommands:
        create: "true"
        update: "true"
        delete: "true"
        validate: "true"
        createFull: "true"
        deleteFull: "true"
      deploymentEngine: "kubectl-apply"
        configFileName: ""
        namespace: "mongodb"      
  sampleApps:
    nodeMongoSample:
      enabled: "true"
      omCommands:
        create: "true"
        update: "true"
        delete: "true"
      deploymentEngine: "kubectl-apply"
        appName: "node-mongo-sample"
        appConfig: "node-mongo-sample-config.yaml"
        namespace: "digikube-sample-apps"
